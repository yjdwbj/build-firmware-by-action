#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/yjdwbj/build-openwrt-y1s
# Description: Build OpenWrt using GitHub Actions
#

name: Build Android Apk

on:
  push:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 1 20 * * *

env:
  REPO_URL: https://github.com/SagerNet/SagerNet
  REPO_BRANCH: main
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: '1.20' # The Go version to download (if necessary) and use.
    - run: go version

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        cache: 'gradle'
        cache-dependency-path: | # optional
          sub-project/*.gradle*
          sub-project/**/gradle-wrapper.properties
    - run: java HelloWorldApp.java

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 8512546

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install git curl wget  tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH SagerNet
        cd SagerNet
        git submodule update --init --recursive

    - name: cache
      if: github.event.inputs.cache == 'true' && github.event.inputs.cache != 'false'
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/SagerNet

    - name: Make Gradle executable
      run: |
        cd SagerNet
        chmod +x ./gradlew

    - name: Build Release APK
      run: |
        echo "LOCALVERSION=$(date +%Y%m%d)-lcy" >> $GITHUB_ENV
        LOCALVERSION=$(date +%Y%m%d)-lcy
        cd SagerNet
        # sed -i '/^org.gradle.jvmargs=.*$/ s/^org/#&/' gradle.properties
        ./gradlew build --no-daemon
        ./gradlew assembleRelease
        cp build/outputs/apk/release/*.apk ${{ github.workspace }}/

    - uses: actions/upload-artifact@v3
      with:
        name: SagerNet-${{ env.LOCALVERSION }}
        path: ${{ github.workspace }}/*.apk

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "SagerNet Android client" > release.txt
        echo "::set-output name=status::success"
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LOCALVERSION }}
        body_path: release.txt
        files: ${{ github.workspace }}/*.apk



