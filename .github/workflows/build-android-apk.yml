#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/yjdwbj/build-openwrt-y1s
# Description: Build OpenWrt using GitHub Actions
#

name: Build Android Apk

on:
  push:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 1 20 * * *

env:
  REPO_URL: https://github.com/SagerNet/SagerNet
  REPO_BRANCH: main
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 8512546

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install git curl wget  tree
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Clone source code
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH SagerNet
        cd SagerNet
        git submodule update --init --recursive

    - name: Fetch Status
      run: |
        cd SagerNet
        git submodule status library/core > libcore_status

    - name: LibCore Cache
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          SagerNet/app/libs/libcore.aar
        key: ${{ hashFiles('.github/workflows/*', 'bin/lib/core/*', 'libcore_status') }}

    - name: Get latest go version
      id: version
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo ::set-output name=go_version::$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')
    - name: Setup Go
      uses: actions/setup-go@v5
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        # Bug: https://github.com/golang/go/issues/58426
        # go-version: ${{ steps.version.outputs.go_version }}
        go-version: 1.19.8
    - name: Gradle cache
      uses: actions/cache@v3
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        path: ~/.gradle
        key: native-${{ hashFiles('**/*.gradle.kts') }}

    - name: Native Build
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        cd SagerNet
        echo "sdk.dir=${ANDROID_HOME}" > local.properties
        echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
        ./run lib core

    - name: Make Gradle executable
      run: |
        cd SagerNet
        chmod +x ./gradlew

    - name: Build Release APK
      run: |
        echo "LOCALVERSION=$(date +%Y%m%d)-lcy" >> $GITHUB_ENV
        LOCALVERSION=$(date +%Y%m%d)-lcy
        cd SagerNet
        sed -i '/^org.gradle.jvmargs=.*$/ s/^org/#&/' gradle.properties
        echo "org.gradle.workers.max=4" >> gradle.properties
        echo "sdk.dir=${ANDROID_HOME}" > local.properties
        echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
        export LOCAL_PROPERTIES="${{ secrets.LOCAL_PROPERTIES }}"
        cat > bin/init/action/library.sh <<EOF
        #!/bin/bash
        git submodule update --init 'library/core/'
        git submodule update --init 'external/'
        EOF

        chmod +x bin/init/action/library.sh
        ./run init action library
        ./gradlew build --no-daemon
        ./gradlew app:assembleOssRelease

    - uses: actions/upload-artifact@v3
      with:
        name: SagerNet-${{ env.LOCALVERSION }}
        path: ${{ github.workspace }}/*.apk

    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        echo "SagerNet Android client" > release.txt
        echo "::set-output name=status::success"
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.LOCALVERSION }}
        body_path: release.txt
        files: ${{ github.workspace }}/*.apk



