# This is a basic workflow to help you get started with Actions

name: Compile v2ray-core debian package

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  push:
  workflow_dispatch:
  schedule:
    - cron: 3 20 * * *

env:
  REPO_BRANCH: main
  BUILD_SCRIPT: build_v2ray_deb.sh
  TZ: Asia/Shanghai

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build tailscale debian package for many architecture
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main
        with:
          ref: ${{ github.ref }}
      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential wget git tree libelf-dev debmake debhelper -y
          sudo -E apt-get -qq install gcc g++ binutils make bison flex yasm libelf-dev binutils-arm-linux-gnueabi gcc-arm-linux-gnueabi -y
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.21

      - name: build v2ray-core
        run: |
          . ${BUILD_SCRIPT}

      - uses: actions/upload-artifact@v4
        with:
          name: v2ray-core
          path: |
            ${{ github.workspace }}/*.deb

      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
          echo "v2ray-core debian package" > release.txt
          echo "::set-output name=status::success"

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v2ray-core
          body_path: release.txt
          files: |
            ${{ github.workspace }}/*.deb

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.1.0
        if: steps.tag.outputs.status == 'success'
        with:
          keep_latest: 6
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

